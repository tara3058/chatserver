// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messege.proto

#include "messege.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace messageservice {
PROTOBUF_CONSTEXPR ResultCode::ResultCode(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.errmsg_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.errcode_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResultCodeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResultCodeDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResultCodeDefaultTypeInternal() {}
  union {
    ResultCode _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResultCodeDefaultTypeInternal _ResultCode_default_instance_;
PROTOBUF_CONSTEXPR OneToOneMessageRequest::OneToOneMessageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.from_id_)*/0
  , /*decltype(_impl_.to_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OneToOneMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneToOneMessageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneToOneMessageRequestDefaultTypeInternal() {}
  union {
    OneToOneMessageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneToOneMessageRequestDefaultTypeInternal _OneToOneMessageRequest_default_instance_;
PROTOBUF_CONSTEXPR OneToOneMessageResponse::OneToOneMessageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OneToOneMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OneToOneMessageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OneToOneMessageResponseDefaultTypeInternal() {}
  union {
    OneToOneMessageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OneToOneMessageResponseDefaultTypeInternal _OneToOneMessageResponse_default_instance_;
PROTOBUF_CONSTEXPR GroupMessageRequest::GroupMessageRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.from_id_)*/0
  , /*decltype(_impl_.group_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupMessageRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupMessageRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupMessageRequestDefaultTypeInternal() {}
  union {
    GroupMessageRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupMessageRequestDefaultTypeInternal _GroupMessageRequest_default_instance_;
PROTOBUF_CONSTEXPR GroupMessageResponse::GroupMessageResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GroupMessageResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GroupMessageResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GroupMessageResponseDefaultTypeInternal() {}
  union {
    GroupMessageResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GroupMessageResponseDefaultTypeInternal _GroupMessageResponse_default_instance_;
PROTOBUF_CONSTEXPR OfflineMessagesRequest::OfflineMessagesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OfflineMessagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OfflineMessagesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OfflineMessagesRequestDefaultTypeInternal() {}
  union {
    OfflineMessagesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OfflineMessagesRequestDefaultTypeInternal _OfflineMessagesRequest_default_instance_;
PROTOBUF_CONSTEXPR OfflineMessagesResponse::OfflineMessagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.messages_)*/{}
  , /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct OfflineMessagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OfflineMessagesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~OfflineMessagesResponseDefaultTypeInternal() {}
  union {
    OfflineMessagesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OfflineMessagesResponseDefaultTypeInternal _OfflineMessagesResponse_default_instance_;
PROTOBUF_CONSTEXPR RemoveOfflineMessagesRequest::RemoveOfflineMessagesRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.user_id_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveOfflineMessagesRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveOfflineMessagesRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveOfflineMessagesRequestDefaultTypeInternal() {}
  union {
    RemoveOfflineMessagesRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveOfflineMessagesRequestDefaultTypeInternal _RemoveOfflineMessagesRequest_default_instance_;
PROTOBUF_CONSTEXPR RemoveOfflineMessagesResponse::RemoveOfflineMessagesResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.result_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RemoveOfflineMessagesResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RemoveOfflineMessagesResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RemoveOfflineMessagesResponseDefaultTypeInternal() {}
  union {
    RemoveOfflineMessagesResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RemoveOfflineMessagesResponseDefaultTypeInternal _RemoveOfflineMessagesResponse_default_instance_;
}  // namespace messageservice
static ::_pb::Metadata file_level_metadata_messege_2eproto[9];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_messege_2eproto = nullptr;
static const ::_pb::ServiceDescriptor* file_level_service_descriptors_messege_2eproto[1];

const uint32_t TableStruct_messege_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::ResultCode, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::ResultCode, _impl_.errcode_),
  PROTOBUF_FIELD_OFFSET(::messageservice::ResultCode, _impl_.errmsg_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::OneToOneMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::OneToOneMessageRequest, _impl_.from_id_),
  PROTOBUF_FIELD_OFFSET(::messageservice::OneToOneMessageRequest, _impl_.to_id_),
  PROTOBUF_FIELD_OFFSET(::messageservice::OneToOneMessageRequest, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::OneToOneMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::OneToOneMessageResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::GroupMessageRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::GroupMessageRequest, _impl_.from_id_),
  PROTOBUF_FIELD_OFFSET(::messageservice::GroupMessageRequest, _impl_.group_id_),
  PROTOBUF_FIELD_OFFSET(::messageservice::GroupMessageRequest, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::GroupMessageResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::GroupMessageResponse, _impl_.result_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::OfflineMessagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::OfflineMessagesRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::OfflineMessagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::OfflineMessagesResponse, _impl_.result_),
  PROTOBUF_FIELD_OFFSET(::messageservice::OfflineMessagesResponse, _impl_.messages_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::RemoveOfflineMessagesRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::RemoveOfflineMessagesRequest, _impl_.user_id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::messageservice::RemoveOfflineMessagesResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::messageservice::RemoveOfflineMessagesResponse, _impl_.result_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::messageservice::ResultCode)},
  { 8, -1, -1, sizeof(::messageservice::OneToOneMessageRequest)},
  { 17, -1, -1, sizeof(::messageservice::OneToOneMessageResponse)},
  { 24, -1, -1, sizeof(::messageservice::GroupMessageRequest)},
  { 33, -1, -1, sizeof(::messageservice::GroupMessageResponse)},
  { 40, -1, -1, sizeof(::messageservice::OfflineMessagesRequest)},
  { 47, -1, -1, sizeof(::messageservice::OfflineMessagesResponse)},
  { 55, -1, -1, sizeof(::messageservice::RemoveOfflineMessagesRequest)},
  { 62, -1, -1, sizeof(::messageservice::RemoveOfflineMessagesResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::messageservice::_ResultCode_default_instance_._instance,
  &::messageservice::_OneToOneMessageRequest_default_instance_._instance,
  &::messageservice::_OneToOneMessageResponse_default_instance_._instance,
  &::messageservice::_GroupMessageRequest_default_instance_._instance,
  &::messageservice::_GroupMessageResponse_default_instance_._instance,
  &::messageservice::_OfflineMessagesRequest_default_instance_._instance,
  &::messageservice::_OfflineMessagesResponse_default_instance_._instance,
  &::messageservice::_RemoveOfflineMessagesRequest_default_instance_._instance,
  &::messageservice::_RemoveOfflineMessagesResponse_default_instance_._instance,
};

const char descriptor_table_protodef_messege_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmessege.proto\022\016messageservice\"-\n\nResul"
  "tCode\022\017\n\007errcode\030\001 \001(\005\022\016\n\006errmsg\030\002 \001(\014\"I"
  "\n\026OneToOneMessageRequest\022\017\n\007from_id\030\001 \001("
  "\005\022\r\n\005to_id\030\002 \001(\005\022\017\n\007message\030\003 \001(\014\"E\n\027One"
  "ToOneMessageResponse\022*\n\006result\030\001 \001(\0132\032.m"
  "essageservice.ResultCode\"I\n\023GroupMessage"
  "Request\022\017\n\007from_id\030\001 \001(\005\022\020\n\010group_id\030\002 \001"
  "(\005\022\017\n\007message\030\003 \001(\014\"B\n\024GroupMessageRespo"
  "nse\022*\n\006result\030\001 \001(\0132\032.messageservice.Res"
  "ultCode\")\n\026OfflineMessagesRequest\022\017\n\007use"
  "r_id\030\001 \001(\005\"W\n\027OfflineMessagesResponse\022*\n"
  "\006result\030\001 \001(\0132\032.messageservice.ResultCod"
  "e\022\020\n\010messages\030\002 \003(\014\"/\n\034RemoveOfflineMess"
  "agesRequest\022\017\n\007user_id\030\001 \001(\005\"K\n\035RemoveOf"
  "flineMessagesResponse\022*\n\006result\030\001 \001(\0132\032."
  "messageservice.ResultCode2\264\003\n\016MessageSer"
  "vice\022f\n\023SendOneToOneMessage\022&.messageser"
  "vice.OneToOneMessageRequest\032\'.messageser"
  "vice.OneToOneMessageResponse\022]\n\020SendGrou"
  "pMessage\022#.messageservice.GroupMessageRe"
  "quest\032$.messageservice.GroupMessageRespo"
  "nse\022e\n\022GetOfflineMessages\022&.messageservi"
  "ce.OfflineMessagesRequest\032\'.messageservi"
  "ce.OfflineMessagesResponse\022t\n\025RemoveOffl"
  "ineMessages\022,.messageservice.RemoveOffli"
  "neMessagesRequest\032-.messageservice.Remov"
  "eOfflineMessagesResponseB\003\200\001\001b\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_messege_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_messege_2eproto = {
    false, false, 1077, descriptor_table_protodef_messege_2eproto,
    "messege.proto",
    &descriptor_table_messege_2eproto_once, nullptr, 0, 9,
    schemas, file_default_instances, TableStruct_messege_2eproto::offsets,
    file_level_metadata_messege_2eproto, file_level_enum_descriptors_messege_2eproto,
    file_level_service_descriptors_messege_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_messege_2eproto_getter() {
  return &descriptor_table_messege_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_messege_2eproto(&descriptor_table_messege_2eproto);
namespace messageservice {

// ===================================================================

class ResultCode::_Internal {
 public:
};

ResultCode::ResultCode(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.ResultCode)
}
ResultCode::ResultCode(const ResultCode& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResultCode* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.errmsg_){}
    , decltype(_impl_.errcode_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_errmsg().empty()) {
    _this->_impl_.errmsg_.Set(from._internal_errmsg(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.errcode_ = from._impl_.errcode_;
  // @@protoc_insertion_point(copy_constructor:messageservice.ResultCode)
}

inline void ResultCode::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.errmsg_){}
    , decltype(_impl_.errcode_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.errmsg_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.errmsg_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResultCode::~ResultCode() {
  // @@protoc_insertion_point(destructor:messageservice.ResultCode)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResultCode::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.errmsg_.Destroy();
}

void ResultCode::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResultCode::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.ResultCode)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.errmsg_.ClearToEmpty();
  _impl_.errcode_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResultCode::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 errcode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.errcode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes errmsg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_errmsg();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResultCode::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.ResultCode)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_errcode(), target);
  }

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_errmsg(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.ResultCode)
  return target;
}

size_t ResultCode::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.ResultCode)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes errmsg = 2;
  if (!this->_internal_errmsg().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_errmsg());
  }

  // int32 errcode = 1;
  if (this->_internal_errcode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_errcode());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResultCode::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResultCode::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResultCode::GetClassData() const { return &_class_data_; }


void ResultCode::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResultCode*>(&to_msg);
  auto& from = static_cast<const ResultCode&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.ResultCode)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_errmsg().empty()) {
    _this->_internal_set_errmsg(from._internal_errmsg());
  }
  if (from._internal_errcode() != 0) {
    _this->_internal_set_errcode(from._internal_errcode());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResultCode::CopyFrom(const ResultCode& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.ResultCode)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResultCode::IsInitialized() const {
  return true;
}

void ResultCode::InternalSwap(ResultCode* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.errmsg_, lhs_arena,
      &other->_impl_.errmsg_, rhs_arena
  );
  swap(_impl_.errcode_, other->_impl_.errcode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResultCode::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[0]);
}

// ===================================================================

class OneToOneMessageRequest::_Internal {
 public:
};

OneToOneMessageRequest::OneToOneMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.OneToOneMessageRequest)
}
OneToOneMessageRequest::OneToOneMessageRequest(const OneToOneMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OneToOneMessageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.from_id_){}
    , decltype(_impl_.to_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.from_id_, &from._impl_.from_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.to_id_) -
    reinterpret_cast<char*>(&_impl_.from_id_)) + sizeof(_impl_.to_id_));
  // @@protoc_insertion_point(copy_constructor:messageservice.OneToOneMessageRequest)
}

inline void OneToOneMessageRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.from_id_){0}
    , decltype(_impl_.to_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

OneToOneMessageRequest::~OneToOneMessageRequest() {
  // @@protoc_insertion_point(destructor:messageservice.OneToOneMessageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OneToOneMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void OneToOneMessageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OneToOneMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.OneToOneMessageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.from_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.to_id_) -
      reinterpret_cast<char*>(&_impl_.from_id_)) + sizeof(_impl_.to_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneToOneMessageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 from_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.from_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 to_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.to_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OneToOneMessageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.OneToOneMessageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 from_id = 1;
  if (this->_internal_from_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_from_id(), target);
  }

  // int32 to_id = 2;
  if (this->_internal_to_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_to_id(), target);
  }

  // bytes message = 3;
  if (!this->_internal_message().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.OneToOneMessageRequest)
  return target;
}

size_t OneToOneMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.OneToOneMessageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // int32 from_id = 1;
  if (this->_internal_from_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_from_id());
  }

  // int32 to_id = 2;
  if (this->_internal_to_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_to_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneToOneMessageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OneToOneMessageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneToOneMessageRequest::GetClassData() const { return &_class_data_; }


void OneToOneMessageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OneToOneMessageRequest*>(&to_msg);
  auto& from = static_cast<const OneToOneMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.OneToOneMessageRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_from_id() != 0) {
    _this->_internal_set_from_id(from._internal_from_id());
  }
  if (from._internal_to_id() != 0) {
    _this->_internal_set_to_id(from._internal_to_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneToOneMessageRequest::CopyFrom(const OneToOneMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.OneToOneMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneToOneMessageRequest::IsInitialized() const {
  return true;
}

void OneToOneMessageRequest::InternalSwap(OneToOneMessageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OneToOneMessageRequest, _impl_.to_id_)
      + sizeof(OneToOneMessageRequest::_impl_.to_id_)
      - PROTOBUF_FIELD_OFFSET(OneToOneMessageRequest, _impl_.from_id_)>(
          reinterpret_cast<char*>(&_impl_.from_id_),
          reinterpret_cast<char*>(&other->_impl_.from_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata OneToOneMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[1]);
}

// ===================================================================

class OneToOneMessageResponse::_Internal {
 public:
  static const ::messageservice::ResultCode& result(const OneToOneMessageResponse* msg);
};

const ::messageservice::ResultCode&
OneToOneMessageResponse::_Internal::result(const OneToOneMessageResponse* msg) {
  return *msg->_impl_.result_;
}
OneToOneMessageResponse::OneToOneMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.OneToOneMessageResponse)
}
OneToOneMessageResponse::OneToOneMessageResponse(const OneToOneMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OneToOneMessageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::messageservice::ResultCode(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:messageservice.OneToOneMessageResponse)
}

inline void OneToOneMessageResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OneToOneMessageResponse::~OneToOneMessageResponse() {
  // @@protoc_insertion_point(destructor:messageservice.OneToOneMessageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OneToOneMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.result_;
}

void OneToOneMessageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OneToOneMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.OneToOneMessageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OneToOneMessageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .messageservice.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OneToOneMessageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.OneToOneMessageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .messageservice.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.OneToOneMessageResponse)
  return target;
}

size_t OneToOneMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.OneToOneMessageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .messageservice.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OneToOneMessageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OneToOneMessageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OneToOneMessageResponse::GetClassData() const { return &_class_data_; }


void OneToOneMessageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OneToOneMessageResponse*>(&to_msg);
  auto& from = static_cast<const OneToOneMessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.OneToOneMessageResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::messageservice::ResultCode::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OneToOneMessageResponse::CopyFrom(const OneToOneMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.OneToOneMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OneToOneMessageResponse::IsInitialized() const {
  return true;
}

void OneToOneMessageResponse::InternalSwap(OneToOneMessageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OneToOneMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[2]);
}

// ===================================================================

class GroupMessageRequest::_Internal {
 public:
};

GroupMessageRequest::GroupMessageRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.GroupMessageRequest)
}
GroupMessageRequest::GroupMessageRequest(const GroupMessageRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupMessageRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.from_id_){}
    , decltype(_impl_.group_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.from_id_, &from._impl_.from_id_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.group_id_) -
    reinterpret_cast<char*>(&_impl_.from_id_)) + sizeof(_impl_.group_id_));
  // @@protoc_insertion_point(copy_constructor:messageservice.GroupMessageRequest)
}

inline void GroupMessageRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , decltype(_impl_.from_id_){0}
    , decltype(_impl_.group_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GroupMessageRequest::~GroupMessageRequest() {
  // @@protoc_insertion_point(destructor:messageservice.GroupMessageRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupMessageRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void GroupMessageRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupMessageRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.GroupMessageRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  ::memset(&_impl_.from_id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.group_id_) -
      reinterpret_cast<char*>(&_impl_.from_id_)) + sizeof(_impl_.group_id_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupMessageRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 from_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.from_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 group_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.group_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupMessageRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.GroupMessageRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 from_id = 1;
  if (this->_internal_from_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_from_id(), target);
  }

  // int32 group_id = 2;
  if (this->_internal_group_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_group_id(), target);
  }

  // bytes message = 3;
  if (!this->_internal_message().empty()) {
    target = stream->WriteBytesMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.GroupMessageRequest)
  return target;
}

size_t GroupMessageRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.GroupMessageRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_message());
  }

  // int32 from_id = 1;
  if (this->_internal_from_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_from_id());
  }

  // int32 group_id = 2;
  if (this->_internal_group_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_group_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupMessageRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupMessageRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupMessageRequest::GetClassData() const { return &_class_data_; }


void GroupMessageRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupMessageRequest*>(&to_msg);
  auto& from = static_cast<const GroupMessageRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.GroupMessageRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_from_id() != 0) {
    _this->_internal_set_from_id(from._internal_from_id());
  }
  if (from._internal_group_id() != 0) {
    _this->_internal_set_group_id(from._internal_group_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupMessageRequest::CopyFrom(const GroupMessageRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.GroupMessageRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMessageRequest::IsInitialized() const {
  return true;
}

void GroupMessageRequest::InternalSwap(GroupMessageRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GroupMessageRequest, _impl_.group_id_)
      + sizeof(GroupMessageRequest::_impl_.group_id_)
      - PROTOBUF_FIELD_OFFSET(GroupMessageRequest, _impl_.from_id_)>(
          reinterpret_cast<char*>(&_impl_.from_id_),
          reinterpret_cast<char*>(&other->_impl_.from_id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupMessageRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[3]);
}

// ===================================================================

class GroupMessageResponse::_Internal {
 public:
  static const ::messageservice::ResultCode& result(const GroupMessageResponse* msg);
};

const ::messageservice::ResultCode&
GroupMessageResponse::_Internal::result(const GroupMessageResponse* msg) {
  return *msg->_impl_.result_;
}
GroupMessageResponse::GroupMessageResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.GroupMessageResponse)
}
GroupMessageResponse::GroupMessageResponse(const GroupMessageResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GroupMessageResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::messageservice::ResultCode(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:messageservice.GroupMessageResponse)
}

inline void GroupMessageResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GroupMessageResponse::~GroupMessageResponse() {
  // @@protoc_insertion_point(destructor:messageservice.GroupMessageResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GroupMessageResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.result_;
}

void GroupMessageResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GroupMessageResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.GroupMessageResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GroupMessageResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .messageservice.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GroupMessageResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.GroupMessageResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .messageservice.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.GroupMessageResponse)
  return target;
}

size_t GroupMessageResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.GroupMessageResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .messageservice.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GroupMessageResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GroupMessageResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GroupMessageResponse::GetClassData() const { return &_class_data_; }


void GroupMessageResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GroupMessageResponse*>(&to_msg);
  auto& from = static_cast<const GroupMessageResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.GroupMessageResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::messageservice::ResultCode::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GroupMessageResponse::CopyFrom(const GroupMessageResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.GroupMessageResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GroupMessageResponse::IsInitialized() const {
  return true;
}

void GroupMessageResponse::InternalSwap(GroupMessageResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GroupMessageResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[4]);
}

// ===================================================================

class OfflineMessagesRequest::_Internal {
 public:
};

OfflineMessagesRequest::OfflineMessagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.OfflineMessagesRequest)
}
OfflineMessagesRequest::OfflineMessagesRequest(const OfflineMessagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OfflineMessagesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:messageservice.OfflineMessagesRequest)
}

inline void OfflineMessagesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OfflineMessagesRequest::~OfflineMessagesRequest() {
  // @@protoc_insertion_point(destructor:messageservice.OfflineMessagesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OfflineMessagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void OfflineMessagesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OfflineMessagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.OfflineMessagesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OfflineMessagesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OfflineMessagesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.OfflineMessagesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.OfflineMessagesRequest)
  return target;
}

size_t OfflineMessagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.OfflineMessagesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OfflineMessagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OfflineMessagesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OfflineMessagesRequest::GetClassData() const { return &_class_data_; }


void OfflineMessagesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OfflineMessagesRequest*>(&to_msg);
  auto& from = static_cast<const OfflineMessagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.OfflineMessagesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OfflineMessagesRequest::CopyFrom(const OfflineMessagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.OfflineMessagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessagesRequest::IsInitialized() const {
  return true;
}

void OfflineMessagesRequest::InternalSwap(OfflineMessagesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OfflineMessagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[5]);
}

// ===================================================================

class OfflineMessagesResponse::_Internal {
 public:
  static const ::messageservice::ResultCode& result(const OfflineMessagesResponse* msg);
};

const ::messageservice::ResultCode&
OfflineMessagesResponse::_Internal::result(const OfflineMessagesResponse* msg) {
  return *msg->_impl_.result_;
}
OfflineMessagesResponse::OfflineMessagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.OfflineMessagesResponse)
}
OfflineMessagesResponse::OfflineMessagesResponse(const OfflineMessagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  OfflineMessagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){from._impl_.messages_}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::messageservice::ResultCode(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:messageservice.OfflineMessagesResponse)
}

inline void OfflineMessagesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.messages_){arena}
    , decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

OfflineMessagesResponse::~OfflineMessagesResponse() {
  // @@protoc_insertion_point(destructor:messageservice.OfflineMessagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void OfflineMessagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.messages_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.result_;
}

void OfflineMessagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void OfflineMessagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.OfflineMessagesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* OfflineMessagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .messageservice.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated bytes messages = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_messages();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* OfflineMessagesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.OfflineMessagesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .messageservice.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  // repeated bytes messages = 2;
  for (int i = 0, n = this->_internal_messages_size(); i < n; i++) {
    const auto& s = this->_internal_messages(i);
    target = stream->WriteBytes(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.OfflineMessagesResponse)
  return target;
}

size_t OfflineMessagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.OfflineMessagesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated bytes messages = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.messages_.size());
  for (int i = 0, n = _impl_.messages_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
      _impl_.messages_.Get(i));
  }

  // .messageservice.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData OfflineMessagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    OfflineMessagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*OfflineMessagesResponse::GetClassData() const { return &_class_data_; }


void OfflineMessagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<OfflineMessagesResponse*>(&to_msg);
  auto& from = static_cast<const OfflineMessagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.OfflineMessagesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.messages_.MergeFrom(from._impl_.messages_);
  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::messageservice::ResultCode::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void OfflineMessagesResponse::CopyFrom(const OfflineMessagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.OfflineMessagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OfflineMessagesResponse::IsInitialized() const {
  return true;
}

void OfflineMessagesResponse::InternalSwap(OfflineMessagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OfflineMessagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[6]);
}

// ===================================================================

class RemoveOfflineMessagesRequest::_Internal {
 public:
};

RemoveOfflineMessagesRequest::RemoveOfflineMessagesRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.RemoveOfflineMessagesRequest)
}
RemoveOfflineMessagesRequest::RemoveOfflineMessagesRequest(const RemoveOfflineMessagesRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveOfflineMessagesRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.user_id_ = from._impl_.user_id_;
  // @@protoc_insertion_point(copy_constructor:messageservice.RemoveOfflineMessagesRequest)
}

inline void RemoveOfflineMessagesRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.user_id_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveOfflineMessagesRequest::~RemoveOfflineMessagesRequest() {
  // @@protoc_insertion_point(destructor:messageservice.RemoveOfflineMessagesRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveOfflineMessagesRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void RemoveOfflineMessagesRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveOfflineMessagesRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.RemoveOfflineMessagesRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOfflineMessagesRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 user_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.user_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveOfflineMessagesRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.RemoveOfflineMessagesRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->_internal_user_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_user_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.RemoveOfflineMessagesRequest)
  return target;
}

size_t RemoveOfflineMessagesRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.RemoveOfflineMessagesRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 user_id = 1;
  if (this->_internal_user_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_user_id());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveOfflineMessagesRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveOfflineMessagesRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveOfflineMessagesRequest::GetClassData() const { return &_class_data_; }


void RemoveOfflineMessagesRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveOfflineMessagesRequest*>(&to_msg);
  auto& from = static_cast<const RemoveOfflineMessagesRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.RemoveOfflineMessagesRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_user_id() != 0) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveOfflineMessagesRequest::CopyFrom(const RemoveOfflineMessagesRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.RemoveOfflineMessagesRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOfflineMessagesRequest::IsInitialized() const {
  return true;
}

void RemoveOfflineMessagesRequest::InternalSwap(RemoveOfflineMessagesRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.user_id_, other->_impl_.user_id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOfflineMessagesRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[7]);
}

// ===================================================================

class RemoveOfflineMessagesResponse::_Internal {
 public:
  static const ::messageservice::ResultCode& result(const RemoveOfflineMessagesResponse* msg);
};

const ::messageservice::ResultCode&
RemoveOfflineMessagesResponse::_Internal::result(const RemoveOfflineMessagesResponse* msg) {
  return *msg->_impl_.result_;
}
RemoveOfflineMessagesResponse::RemoveOfflineMessagesResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:messageservice.RemoveOfflineMessagesResponse)
}
RemoveOfflineMessagesResponse::RemoveOfflineMessagesResponse(const RemoveOfflineMessagesResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RemoveOfflineMessagesResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_result()) {
    _this->_impl_.result_ = new ::messageservice::ResultCode(*from._impl_.result_);
  }
  // @@protoc_insertion_point(copy_constructor:messageservice.RemoveOfflineMessagesResponse)
}

inline void RemoveOfflineMessagesResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.result_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RemoveOfflineMessagesResponse::~RemoveOfflineMessagesResponse() {
  // @@protoc_insertion_point(destructor:messageservice.RemoveOfflineMessagesResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RemoveOfflineMessagesResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.result_;
}

void RemoveOfflineMessagesResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RemoveOfflineMessagesResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:messageservice.RemoveOfflineMessagesResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.result_ != nullptr) {
    delete _impl_.result_;
  }
  _impl_.result_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RemoveOfflineMessagesResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .messageservice.ResultCode result = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_result(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RemoveOfflineMessagesResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:messageservice.RemoveOfflineMessagesResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .messageservice.ResultCode result = 1;
  if (this->_internal_has_result()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::result(this),
        _Internal::result(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:messageservice.RemoveOfflineMessagesResponse)
  return target;
}

size_t RemoveOfflineMessagesResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:messageservice.RemoveOfflineMessagesResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .messageservice.ResultCode result = 1;
  if (this->_internal_has_result()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.result_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RemoveOfflineMessagesResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RemoveOfflineMessagesResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RemoveOfflineMessagesResponse::GetClassData() const { return &_class_data_; }


void RemoveOfflineMessagesResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RemoveOfflineMessagesResponse*>(&to_msg);
  auto& from = static_cast<const RemoveOfflineMessagesResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:messageservice.RemoveOfflineMessagesResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_result()) {
    _this->_internal_mutable_result()->::messageservice::ResultCode::MergeFrom(
        from._internal_result());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RemoveOfflineMessagesResponse::CopyFrom(const RemoveOfflineMessagesResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:messageservice.RemoveOfflineMessagesResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RemoveOfflineMessagesResponse::IsInitialized() const {
  return true;
}

void RemoveOfflineMessagesResponse::InternalSwap(RemoveOfflineMessagesResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.result_, other->_impl_.result_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RemoveOfflineMessagesResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_messege_2eproto_getter, &descriptor_table_messege_2eproto_once,
      file_level_metadata_messege_2eproto[8]);
}

// ===================================================================

MessageService::~MessageService() {}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* MessageService::descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_messege_2eproto);
  return file_level_service_descriptors_messege_2eproto[0];
}

const ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor* MessageService::GetDescriptor() {
  return descriptor();
}

void MessageService::SendOneToOneMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::messageservice::OneToOneMessageRequest*,
                         ::messageservice::OneToOneMessageResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendOneToOneMessage() not implemented.");
  done->Run();
}

void MessageService::SendGroupMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::messageservice::GroupMessageRequest*,
                         ::messageservice::GroupMessageResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method SendGroupMessage() not implemented.");
  done->Run();
}

void MessageService::GetOfflineMessages(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::messageservice::OfflineMessagesRequest*,
                         ::messageservice::OfflineMessagesResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method GetOfflineMessages() not implemented.");
  done->Run();
}

void MessageService::RemoveOfflineMessages(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                         const ::messageservice::RemoveOfflineMessagesRequest*,
                         ::messageservice::RemoveOfflineMessagesResponse*,
                         ::google::protobuf::Closure* done) {
  controller->SetFailed("Method RemoveOfflineMessages() not implemented.");
  done->Run();
}

void MessageService::CallMethod(const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method,
                             ::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                             const ::PROTOBUF_NAMESPACE_ID::Message* request,
                             ::PROTOBUF_NAMESPACE_ID::Message* response,
                             ::google::protobuf::Closure* done) {
  GOOGLE_DCHECK_EQ(method->service(), file_level_service_descriptors_messege_2eproto[0]);
  switch(method->index()) {
    case 0:
      SendOneToOneMessage(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::messageservice::OneToOneMessageRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::messageservice::OneToOneMessageResponse*>(
                 response),
             done);
      break;
    case 1:
      SendGroupMessage(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::messageservice::GroupMessageRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::messageservice::GroupMessageResponse*>(
                 response),
             done);
      break;
    case 2:
      GetOfflineMessages(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::messageservice::OfflineMessagesRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::messageservice::OfflineMessagesResponse*>(
                 response),
             done);
      break;
    case 3:
      RemoveOfflineMessages(controller,
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<const ::messageservice::RemoveOfflineMessagesRequest*>(
                 request),
             ::PROTOBUF_NAMESPACE_ID::internal::DownCast<::messageservice::RemoveOfflineMessagesResponse*>(
                 response),
             done);
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& MessageService::GetRequestPrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::messageservice::OneToOneMessageRequest::default_instance();
    case 1:
      return ::messageservice::GroupMessageRequest::default_instance();
    case 2:
      return ::messageservice::OfflineMessagesRequest::default_instance();
    case 3:
      return ::messageservice::RemoveOfflineMessagesRequest::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->input_type());
  }
}

const ::PROTOBUF_NAMESPACE_ID::Message& MessageService::GetResponsePrototype(
    const ::PROTOBUF_NAMESPACE_ID::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::messageservice::OneToOneMessageResponse::default_instance();
    case 1:
      return ::messageservice::GroupMessageResponse::default_instance();
    case 2:
      return ::messageservice::OfflineMessagesResponse::default_instance();
    case 3:
      return ::messageservice::RemoveOfflineMessagesResponse::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *::PROTOBUF_NAMESPACE_ID::MessageFactory::generated_factory()
          ->GetPrototype(method->output_type());
  }
}

MessageService_Stub::MessageService_Stub(::PROTOBUF_NAMESPACE_ID::RpcChannel* channel)
  : channel_(channel), owns_channel_(false) {}
MessageService_Stub::MessageService_Stub(
    ::PROTOBUF_NAMESPACE_ID::RpcChannel* channel,
    ::PROTOBUF_NAMESPACE_ID::Service::ChannelOwnership ownership)
  : channel_(channel),
    owns_channel_(ownership == ::PROTOBUF_NAMESPACE_ID::Service::STUB_OWNS_CHANNEL) {}
MessageService_Stub::~MessageService_Stub() {
  if (owns_channel_) delete channel_;
}

void MessageService_Stub::SendOneToOneMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::messageservice::OneToOneMessageRequest* request,
                              ::messageservice::OneToOneMessageResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(0),
                       controller, request, response, done);
}
void MessageService_Stub::SendGroupMessage(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::messageservice::GroupMessageRequest* request,
                              ::messageservice::GroupMessageResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(1),
                       controller, request, response, done);
}
void MessageService_Stub::GetOfflineMessages(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::messageservice::OfflineMessagesRequest* request,
                              ::messageservice::OfflineMessagesResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(2),
                       controller, request, response, done);
}
void MessageService_Stub::RemoveOfflineMessages(::PROTOBUF_NAMESPACE_ID::RpcController* controller,
                              const ::messageservice::RemoveOfflineMessagesRequest* request,
                              ::messageservice::RemoveOfflineMessagesResponse* response,
                              ::google::protobuf::Closure* done) {
  channel_->CallMethod(descriptor()->method(3),
                       controller, request, response, done);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace messageservice
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::messageservice::ResultCode*
Arena::CreateMaybeMessage< ::messageservice::ResultCode >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::ResultCode >(arena);
}
template<> PROTOBUF_NOINLINE ::messageservice::OneToOneMessageRequest*
Arena::CreateMaybeMessage< ::messageservice::OneToOneMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::OneToOneMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::messageservice::OneToOneMessageResponse*
Arena::CreateMaybeMessage< ::messageservice::OneToOneMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::OneToOneMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::messageservice::GroupMessageRequest*
Arena::CreateMaybeMessage< ::messageservice::GroupMessageRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::GroupMessageRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::messageservice::GroupMessageResponse*
Arena::CreateMaybeMessage< ::messageservice::GroupMessageResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::GroupMessageResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::messageservice::OfflineMessagesRequest*
Arena::CreateMaybeMessage< ::messageservice::OfflineMessagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::OfflineMessagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::messageservice::OfflineMessagesResponse*
Arena::CreateMaybeMessage< ::messageservice::OfflineMessagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::OfflineMessagesResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::messageservice::RemoveOfflineMessagesRequest*
Arena::CreateMaybeMessage< ::messageservice::RemoveOfflineMessagesRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::RemoveOfflineMessagesRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::messageservice::RemoveOfflineMessagesResponse*
Arena::CreateMaybeMessage< ::messageservice::RemoveOfflineMessagesResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::messageservice::RemoveOfflineMessagesResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
